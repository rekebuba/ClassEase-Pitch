 [project]
name = "classEase-Pitch"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "bcrypt>=4.3.0",
    "debugpy>=1.8.14",
    "ethiopian-date>=1.0",
    "factory-boy>=3.3.3",
    "flask-apscheduler>=1.13.1",
    "flask-cors>=5.0.1",
    "flask-jwt-extended>=4.7.1",
    "flask-marshmallow>=1.3.0",
    "flask-sqlalchemy>=3.1.1",
    "marshmallow>=4.0.0",
    "marshmallow-sqlalchemy>=1.4.2",
    "mypy>=1.15.0",
    "mysql-connector-python>=9.3.0",
    "mysqlclient>=2.2.7",
    "num2words>=0.5.14",
    "pillow>=11.2.1",
    "pre-commit>=4.2.0",
    "pydantic>=2.11.5",
    "pyethiodate>=1.0.6",
    "pyinspect>=0.1.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-xdist>=3.6.1",
    "python-dotenv>=1.1.0",
    "sqlalchemy>=2.0.40",
    "sqlmodel>=0.0.24",
    "types-factory-boy>=0.4.1",
    "types-flask-cors>=6.0.0.20250520",
]

[tool.mypy]
files = ["."]
strict = true                    # Enables all strictness flags below
disallow_untyped_defs = true     # Functions must have type annotations
disallow_incomplete_defs = true  # No partial annotations (e.g., `def foo(x) -> int`)
disallow_any_generics = true       # No `Any` in generic types
warn_return_any = true           # Warn if a function returns `Any`
warn_unused_configs = true       # Warn about unused mypy configs

plugins = "sqlalchemy.ext.mypy.plugin"
disable_error_code = ["misc"]     # Disable specific error codes (e.g., `misc` for non-critical issues)

# Imports and modules
ignore_missing_imports = false    # Fail if imports are missing
follow_imports = "silent"        # Follow imports but don't spam output
namespace_packages = true        # Support modern Python namespace packages

# Performance optimizations (critical for large projects)
cache_dir = ".mypy_cache"        # Speeds up incremental checks
show_error_codes = true          # Show error codes (e.g., `[no-untyped-def]`)
warn_redundant_casts = true      # Warn if casting is unnecessary
warn_unused_ignores = true       # Warn if `# type: ignore` is unused

# Platform-specific settings (if needed)
python_version = "3.10"          # Set your target Python version
platform = "linux"              # Optional: enforce OS-specific checks

# Per-module overrides (example: relax rules for tests/legacy code)
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "legacy.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]       # Replaces pytestArgs
pythonpath = ["."]       # Ensures correct import resolution
addopts = "-rav -s"           # Optional: Add verbose flag

[dependency-groups]
dev = [
    "ruff>=0.12.0",
]

[tool.ruff]
extend-include = ["*.ipynb"]
