version: '3.8'

services:
  devcontiner:
    container_name: classease_devcontainer
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    user: "rekebuba"
    privileged: true  # Required for Docker-in-Docker
    volumes:
      - ..:/workspaces:cached
      - /var/run/docker.sock:/var/run/docker.sock  # Optional (alternative to DinD)
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - app-network
    command: sleep infinity

  frontend:
    container_name: frontend_container
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - IS_DOCKER=true
    volumes:
      - .:/frontend:cached
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true
    tty: true

  backend:
    container_name: backend_container
    working_dir: /backend
    build:
      context: ./app/backend # host directory
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "5678:5678"
    env_file:
      - .env
    environment:
      - IS_DOCKER=true
    volumes:
      - .:/backend:cached
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"
    external_links:
      - mysql_container:db  # Maps the existing container to 'db'
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./app/backend/setup_mysql_dev.sql:/docker-entrypoint-initdb.d/setup_mysql_dev.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql_container" ]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  # backend_volume:
  # frontend_volume:
  mysql_data:

networks:
  app-network:
